name: 🏷️ Generate Tag Pages from TIL

on:
  push:
    branches: [main]
    paths: ["**/*.md"]
  workflow_dispatch:

jobs:
  generate-tags:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install PyYAML
        run: pip install pyyaml

      - name: Parse TIL Tags and Generate Pages
        run: |
          python3 <<EOF
          import os, yaml
          from pathlib import Path

          REPO_URL = "https://github.com/MinHyeok-lee1/TIL/blob/main/"
          root_dir = Path(".")
          tag_map = {}

          for path in root_dir.rglob("*.md"):
              if "tags/" in str(path):  # tags 폴더 제외
                  continue

              try:
                  content = path.read_text(encoding="utf-8")
                  parts = content.split("---")
                  if len(parts) >= 3:
                      meta = yaml.safe_load(parts[1]) or {}
                      title = meta.get("title", path.name)
                      date = meta.get("date", "")
                      summary = meta.get("summary", "")
                      tags = meta.get("tags", [])

                      relpath = path.relative_to(root_dir).as_posix()
                      link = f"{REPO_URL}{relpath}"
                      for tag in tags:
                          tag_map.setdefault(tag, []).append(
                              (title, date, summary, link)
                          )
              except Exception as e:
                  print(f"⚠️ Failed to parse {path}: {e}")

          # ✅ tags 디렉토리 없으면 생성
          os.makedirs("tags", exist_ok=True)

          for tag, entries in tag_map.items():
          # ✅ 슬래시 포함된 태그 방어 처리
          safe_tag = tag.replace("/", "-")
          entries.sort(key=lambda x: str(x[2]), reverse=True)  # summary로 정렬 (index 2)
          content = f"# 🏷️ Tag: {tag}\n\n| Title | Summary | Date |\n|-------|------|---------|\n"
          for title, date, summary, link in entries:
              content += f"| [{title}]({link}) | {summary} | {date} |\n" 
          with open(f"tags/{safe_tag}.md", "w", encoding="utf-8") as f:
              f.write(content)
          EOF

      - name: Commit and Push if Changed
        run: |
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"
          git add tags
          git diff --cached --quiet || git commit -m "🏷️ update: auto-generated tag pages"
          git push
