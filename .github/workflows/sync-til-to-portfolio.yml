name: üîÑ Sync TIL to Portfolio

on:
  push:
    branches: [main]
    paths: ["**/*.md"]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      hasYears: ${{ steps.set-years.outputs.hasYears }}
      years: ${{ steps.set-years.outputs.years }}

    steps:
      - name: Checkout TIL repository
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Find TIL years (for matrix)
        id: set-years
        run: |
          YEARS_RAW=$(find til-repo -mindepth 1 -maxdepth 1 -type d -regex 'til-repo/[0-9]{4}' | sed 's|til-repo/||')
          if [ -z "$YEARS_RAW" ]; then
            echo "hasYears=false" >> $GITHUB_OUTPUT
            echo "years=[]" >> $GITHUB_OUTPUT
          else
            YEARS_JSON=$(echo "$YEARS_RAW" | jq -R -s -c 'split("\n") | map(select(. != ""))')
            echo "hasYears=true" >> $GITHUB_OUTPUT
            echo "years=${YEARS_JSON}" >> $GITHUB_OUTPUT
          fi

  build-years:
    needs: setup
    if: needs.setup.outputs.hasYears == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        year: ${{ fromJson(needs.setup.outputs.years || '[]') }}

    steps:
      - name: Checkout TIL repo
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Sync and convert ${{ matrix.year }}
        run: |
          set -e
          YEAR=${{ matrix.year }}

          echo "üìÅ Scanning til-repo/$YEAR"
          for MONTH in $(find "til-repo/$YEAR" -mindepth 1 -maxdepth 1 -type d -regex "til-repo/$YEAR/[0-9]{2}" -exec basename {} \;); do
            echo "üìÇ Processing $MONTH"
            mkdir -p "portfolio-repo/src/pages/til/til-$YEAR/til-$MONTH"

            shopt -s nullglob
            for FILE in til-repo/$YEAR/$MONTH/*.md; do
              echo "üìù Copying $FILE"
              cp "$FILE" "portfolio-repo/src/pages/til/til-$YEAR/til-$MONTH/"
            done
            shopt -u nullglob
          done

          echo "üîÑ Converting .md to .mdx"
          find portfolio-repo/src/pages/til/til-$YEAR -type f -name "*.md" | while IFS= read -r FILE; do
            echo "üîß Renaming $FILE ‚Üí ${FILE%.md}.mdx"
            mv "$FILE" "${FILE%.md}.mdx"
          done

  finalize:
    needs: [build-years]
    if: always() # finalize Îã®Í≥ÑÎäî build-yearsÍ∞Ä Í±¥ÎÑàÎõ∞Ïñ¥ÎèÑ Ïã§Ìñâ
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Create index.mdx and _meta.json
        run: |
          BASE="portfolio-repo/src/pages/til"
          mkdir -p "$BASE"
          echo '{' > "$BASE/_meta.json"
          echo '  "index": "ÏÜåÍ∞ú",' >> "$BASE/_meta.json"
          echo '  "til-tags": "ÌÉúÍ∑∏ Î™®Ïùå"' >> "$BASE/_meta.json"

          cat <<EOF > "$BASE/index.mdx"
          # üìì Today I Learned (TIL)

          > Íæ∏Ï§ÄÌïú Í∏∞Î°ùÏùÄ Ï∞∏Î°úÏö¥ ÏÑ±Ïû•ÏúºÎ°ú Ïù¥Ïó¨ÏßÑÎã§.

          [üè∑Ô∏è ÌÉúÍ∑∏ Î™®Ïùå](/til/til-tags)

          ## üìÖ Ïó∞ÎèÑÎ≥Ñ

          EOF

          YEAR_DIRS=$(find "$BASE" -mindepth 1 -maxdepth 1 -type d -regex "$BASE/til-[0-9]{4}" || true)
          if [ -z "$YEAR_DIRS" ]; then
            echo "‚ö†Ô∏è No til-YYYY folders found, creating placeholder."
            mkdir -p "$BASE/til-2025/til-01"
            YEAR_DIRS="$BASE/til-2025"
          fi

          for YEAR_PATH in $YEAR_DIRS; do
            YEAR=$(basename "$YEAR_PATH" | cut -d'-' -f2)
            echo "- [$YEARÎÖÑ TIL](/til/til-$YEAR)" >> "$BASE/index.mdx"
            echo '  ,"til-'$YEAR'": "'$YEAR'ÎÖÑ TIL"' >> "$BASE/_meta.json"

            mkdir -p "$YEAR_PATH"
            echo "# ÏÜåÍ∞ú" > "$YEAR_PATH/index.mdx"
            echo "$YEARÎÖÑ TIL Í∏∞Î°ùÏûÖÎãàÎã§." >> "$YEAR_PATH/index.mdx"
            echo "| Ïõî | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$YEAR_PATH/index.mdx"
            echo "|----|------------------|------------------|" >> "$YEAR_PATH/index.mdx"

            echo '{' > "$YEAR_PATH/_meta.json"
            echo '  "index": "ÏÜåÍ∞ú"' >> "$YEAR_PATH/_meta.json"

            MONTH_DIRS=$(find "$YEAR_PATH" -mindepth 1 -maxdepth 1 -type d -regex "$YEAR_PATH/til-[0-9]{2}" || true)
            for MONTH_PATH in $MONTH_DIRS; do
              MONTH=$(basename "$MONTH_PATH" | cut -d'-' -f2)
              mkdir -p "$MONTH_PATH"
              echo "| ${MONTH}Ïõî | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/til-$YEAR/til-$MONTH) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/tree/main/$YEAR/$MONTH) |" >> "$YEAR_PATH/index.mdx"
              echo '  ,"til-'$MONTH'": "'$MONTH'Ïõî TIL"' >> "$YEAR_PATH/_meta.json"

              echo "# ÏÜåÍ∞ú" > "$MONTH_PATH/index.mdx"
              echo "${MONTH}ÏõîÏùò TIL Í∏∞Î°ùÏûÖÎãàÎã§." >> "$MONTH_PATH/index.mdx"
              echo "| Ï†úÎ™© | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$MONTH_PATH/index.mdx"
              echo "|-------|------------------|------------------|" >> "$MONTH_PATH/index.mdx"

              echo '{' > "$MONTH_PATH/_meta.json"
              echo '  "index": "ÏÜåÍ∞ú"' >> "$MONTH_PATH/_meta.json"

              shopt -s nullglob
              for FILE in "$MONTH_PATH"/*.mdx; do
                FNAME=$(basename "$FILE" .mdx)
                [ "$FNAME" = "index" ] && continue
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE=$(echo "${FNAME:3}" | sed 's/-/ /g')
                echo "| ${DAY}Ïùº $TITLE | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/til-$YEAR/til-$MONTH/$FNAME) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH/$FNAME.md) |" >> "$MONTH_PATH/index.mdx"
                echo '  ,"'$FNAME'": "'${DAY}Ïùº $TITLE'"' >> "$MONTH_PATH/_meta.json"
              done
              shopt -u nullglob

              echo "}" >> "$MONTH_PATH/_meta.json"
            done

            echo "}" >> "$YEAR_PATH/_meta.json"
          done

          echo "}" >> "$BASE/_meta.json"

      - name: Convert tags and generate tag index
        run: |
          TAGS_DIR="portfolio-repo/src/pages/til/tags"
          echo '# ÏÜåÍ∞ú

          TIL ÌÉúÍ∑∏ Î™®ÏùåÏûÖÎãàÎã§.

          | ÌÉúÍ∑∏ | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |
          |------|------------------|------------------|' > "$TAGS_DIR/index.mdx"
          echo '{ "index": "ÏÜåÍ∞ú" }' > "$TAGS_DIR/_meta.json"

          for TAG_FILE in "$TAGS_DIR"/*.mdx; do
            TAG=$(basename "$TAG_FILE" .mdx)
            [ "$TAG" = "index" ] && continue
            echo "# üè∑Ô∏è $TAG TIL Î™®Ïùå" > "$TAG_FILE"
            echo "" >> "$TAG_FILE"
            echo "| Ï†úÎ™© | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$TAG_FILE"
            echo "|-------|------------------|------------------|" >> "$TAG_FILE"

            for FILE in portfolio-repo/src/pages/til/til-*/til-*/*.mdx; do
              FNAME=$(basename "$FILE" .mdx)
              [ "$FNAME" = "index" ] && continue
              if grep -q "tags:.*\b$TAG\b" "$FILE"; then
                YM=$(echo "$FILE" | grep -o 'til-[0-9]*/til-[0-9]*')
                TITLE=$(echo "${FNAME:3}" | sed 's/-/ /g')
                echo "| $TITLE | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/$YM/$FNAME) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/${YM/til-/}/$FNAME.md) |" >> "$TAG_FILE"
              fi
            done

            echo "| $TAG | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/til-tags/$TAG) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$TAG.md) |" >> "$TAGS_DIR/index.mdx"
          done

      - name: Commit and Push
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "üìù Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git push
