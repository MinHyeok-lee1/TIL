name: üîÑ Sync TIL to Portfolio

on:
  push:
    branches: [main]
    paths: ["**/*.md"]
  workflow_dispatch:

jobs:
  sync-til:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TIL repo
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Cleanup old TIL pages
        run: |
          rm -rf portfolio-repo/src/pages/til

      - name: Sync and convert TIL files
        run: |
          set -e
          SRC_BASE="til-repo"
          DEST_BASE="portfolio-repo/src/pages/til"

          mkdir -p "$DEST_BASE"

          find "$SRC_BASE" -type f -name "*.md" ! -path "$SRC_BASE/tags/*" | grep -vE '^til-repo/README\.md$' | while read FILE; do
            REL_PATH="${FILE#$SRC_BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2)
            FNAME=$(basename "$REL_PATH" .md)

            [[ "$YEAR" =~ ^[0-9]{4}$ ]] || continue
            [[ "$MONTH" =~ ^[0-9]{2}$ ]] || continue

            DEST_DIR="$DEST_BASE/til-$YEAR/til-$MONTH"
            mkdir -p "$DEST_DIR"
            cp "$FILE" "$DEST_DIR/$FNAME.mdx"
          done

          TAGS_SRC="$SRC_BASE/tags"
          TAGS_DEST="$DEST_BASE/tags"
          mkdir -p "$TAGS_DEST"

          shopt -s nullglob
          for FILE in "$TAGS_SRC"/*.md; do
            NAME=$(basename "$FILE" .md)
            cp "$FILE" "$TAGS_DEST/$NAME.mdx"
          done
          shopt -u nullglob

      - name: Create tags/_meta.json and index.mdx
        run: |
          TAGS_DIR="portfolio-repo/src/pages/til/tags"
          mkdir -p "$TAGS_DIR"

          echo '{' > "$TAGS_DIR/_meta.json"
          echo '  "index": "ÏÜåÍ∞ú"' >> "$TAGS_DIR/_meta.json"
          FIRST=1
          for FILE in "$TAGS_DIR"/*.mdx; do
            NAME=$(basename "$FILE" .mdx)
            echo '  ,"'$NAME'": "'$NAME' ÌÉúÍ∑∏"' >> "$TAGS_DIR/_meta.json"
          done
          echo "}" >> "$TAGS_DIR/_meta.json"

          echo "# üè∑Ô∏è ÌÉúÍ∑∏ Î™®Ïùå" > "$TAGS_DIR/index.mdx"
          echo "| ÌÉúÍ∑∏ | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$TAGS_DIR/index.mdx"
          echo "|------|------------------|------------------|" >> "$TAGS_DIR/index.mdx"

          for FILE in "$TAGS_DIR"/*.mdx; do
            NAME=$(basename "$FILE" .mdx)
            echo "| $NAME | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/tags/$NAME) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$NAME.md) |" >> "$TAGS_DIR/index.mdx"
          done

      - name: Create all _meta.json and index.mdx files
        run: |
          BASE="portfolio-repo/src/pages/til"

          # til/_meta.json
          echo '{' > "$BASE/_meta.json"
          echo '  "index": "ÏÜåÍ∞ú",' >> "$BASE/_meta.json"
          echo '  "tags": "ÌÉúÍ∑∏Î™®Ïùå"' >> "$BASE/_meta.json"

          # tags/_meta.json, tags/index.mdx
          TAGS_DIR="$BASE/tags"
          mkdir -p "$TAGS_DIR"
          echo '{' > "$TAGS_DIR/_meta.json"
          echo '  "index": "ÏÜåÍ∞ú"' >> "$TAGS_DIR/_meta.json"
          FIRST=1
          FILES=( "$TAGS_DIR"/*.mdx )
          for FILE in "${FILES[@]}"; do
            [ -f "$FILE" ] || continue
            NAME=$(basename "$FILE" .mdx)
            if [ $FIRST -eq 1 ]; then
              echo '  ,"'$NAME'": "'$NAME' ÌÉúÍ∑∏"' >> "$TAGS_DIR/_meta.json"
              FIRST=0
            else
              echo '  ,"'$NAME'": "'$NAME' ÌÉúÍ∑∏"' >> "$TAGS_DIR/_meta.json"
            fi
          done
          echo "}" >> "$TAGS_DIR/_meta.json"

          echo "# üè∑Ô∏è ÌÉúÍ∑∏ Î™®Ïùå" > "$TAGS_DIR/index.mdx"
          echo "| ÌÉúÍ∑∏ | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$TAGS_DIR/index.mdx"
          echo "|------|------------------|------------------|" >> "$TAGS_DIR/index.mdx"
          for FILE in "${FILES[@]}"; do
            [ -f "$FILE" ] || continue
            NAME=$(basename "$FILE" .mdx)
            echo "| $NAME | [Nextra Î∞îÎ°úÍ∞ÄÍ∏∞](/til/tags/$NAME) | [GitHub Î∞îÎ°úÍ∞ÄÍ∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$NAME.md) |" >> "$TAGS_DIR/index.mdx"
          done

          # til index.mdx
          echo "# üìì Today I Learned (TIL)" > "$BASE/index.mdx"
          echo "> Íæ∏Ï§ÄÌïú Í∏∞Î°ùÏùÄ Íæ∏Ï§ÄÌïú ÏÑ±Ïû•ÏúºÎ°ú Ïù¥Ïñ¥ÏßÑÎã§." >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "[üè∑Ô∏è ÌÉúÍ∑∏Î™®Ïùå](/til/tags)" >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "## üìÖ Ïó∞ÎèÑÎ≥Ñ" >> "$BASE/index.mdx"

          # til-YYYY/_meta.json, til-YYYY/index.mdx
          for YEAR_DIR in "$BASE"/til-*; do
            [ -d "$YEAR_DIR" ] || continue
            YEAR=$(basename "$YEAR_DIR" | cut -d'-' -f2)
            echo ",  \"til-$YEAR\": \"${YEAR}ÎÖÑ TIL\"" >> "$BASE/_meta.json"

            echo "# Î¨∏ÏÑúÍ∞úÏöî" > "$YEAR_DIR/index.mdx"
            echo "$YEARÎÖÑ TIL Í∏∞Î°ùÏûÖÎãàÎã§." >> "$YEAR_DIR/index.mdx"
            echo "| Ïõî | Nextra Î∞îÎ°úÍ∞ÄÍ∏∞ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$YEAR_DIR/index.mdx"
            echo "|----|------------------|------------------|" >> "$YEAR_DIR/index.mdx"

            META="$YEAR_DIR/_meta.json"
            echo "{" > "$META"
            FIRST=1

            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTH=$(basename "$MONTH_DIR" | cut -d'-' -f2)
              if [ $FIRST -eq 1 ]; then
                echo "  \"til-$MONTH\": \"${MONTH}Ïõî TIL\"" >> "$META"
                FIRST=0
              else
                echo "  ,\"til-$MONTH\": \"${MONTH}Ïõî TIL\"" >> "$META"
              fi

              echo "- [$MONTHÏõî TIL](/til/til-$YEAR/til-$MONTH)" >> "$YEAR_DIR/index.mdx"

              # til-YYYY/til-MM/_meta.json, til-YYYY/til-MM/index.mdx
              MONTH_META="$MONTH_DIR/_meta.json"
              echo "{" > "$MONTH_META"
              FIRST_FILE=1
              FILES=( "$MONTH_DIR"/*.mdx )
              for FILE in "${FILES[@]}"; do
                [ -f "$FILE" ] || continue
                FNAME=$(basename "$FILE" .mdx)
                [ "$FNAME" = "index" ] && continue
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE_CLEAN=$(echo "$FNAME" | cut -d'-' -f2- | sed 's/-/ /g')
                if [ $FIRST_FILE -eq 1 ]; then
                  echo "  \"$FNAME\": \"${DAY}Ïùº ${TITLE_CLEAN}\"" >> "$MONTH_META"
                  FIRST_FILE=0
                else
                  echo "  ,\"$FNAME\": \"${DAY}Ïùº ${TITLE_CLEAN}\"" >> "$MONTH_META"
                fi
              done
              echo "}" >> "$MONTH_META"
            done
            echo "}" >> "$META"
          done
          echo "}" >> "$BASE/_meta.json"

      - name: Commit and Push
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"
          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit"
            exit 0
          fi
          git commit -m "üìù Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git push

      # - name: Deploy to Vercel
      #   if: always()
      #   run: |
      #     set -e
      #     npm install -g vercel
      #     FORCE_FLAG=""
      #     if [ "${{ steps.pushcheck.outputs.should_force }}" == "true" ]; then
      #       FORCE_FLAG="--force"
      #     fi
      #     vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes $FORCE_FLAG --debug
      #   working-directory: portfolio-repo
