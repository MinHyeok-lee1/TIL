name: 🔄 Sync TIL to Portfolio

on:
  workflow_run:
    workflows: ["🏷️ Generate Tag Pages from TIL"]
    types:
      - completed
  workflow_dispatch:

jobs:
  sync-til:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TIL repo
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Cleanup old TIL pages
        run: |
          rm -rf portfolio-repo/pages/til

      - name: Sync and convert TIL files
        run: |
          set -e
          SRC_BASE="til-repo"
          DEST_BASE="portfolio-repo/pages/til"

          # safe_tag 변환 함수
          to_safe_tag() {
            echo "$1" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '_' | tr -s '_' | sed 's/^_//;s/_$//'
          }

          mkdir -p "$DEST_BASE"

          find "$SRC_BASE" -type f -name "*.md" ! -path "$SRC_BASE/tags/*" | grep -vE '^til-repo/README\.md$' | while read FILE; do
            REL_PATH="${FILE#$SRC_BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2)
            FNAME=$(basename "$REL_PATH" .md)

            [[ "$YEAR" =~ ^[0-9]{4}$ ]] || continue
            [[ "$MONTH" =~ ^[0-9]{2}$ ]] || continue

            mkdir -p "$DEST_BASE/til-$YEAR"
            DEST_DIR="$DEST_BASE/til-$YEAR/til-$MONTH"
            mkdir -p "$DEST_DIR"
            cp "$FILE" "$DEST_DIR/$FNAME.mdx"
          done

          TAGS_SRC="$SRC_BASE/tags"
          TAGS_DIR="$DEST_BASE/tags"
          mkdir -p "$TAGS_DIR"

          shopt -s nullglob
          for FILE in "$TAGS_SRC"/*.md; do
            ORG_TAG_NAME=$(basename "$FILE" .md)
            SAFE_TAG=$(echo "$ORG_TAG_NAME" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '_' | tr -s '_' | sed 's/^_//;s/_$//')
            MDX_FILE="$TAGS_DIR/$SAFE_TAG.mdx"

            # 헤더 생성
            echo "# 🏷️ $SAFE_TAG TIL 모음" > "$MDX_FILE"
            echo "" >> "$MDX_FILE"

            # index.mdx 파일의 경우 요약을 제외하고 생성
            if [[ "$SAFE_TAG" == "index" ]]; then
              echo "| 태그 | 바로가기 |" >> "$MDX_FILE"
              echo "|------|----------|" >> "$MDX_FILE"
            else
              echo "| 제목 | 바로가기 |" >> "$MDX_FILE"
              echo "|------|----------|" >> "$MDX_FILE"
            fi

            # 본문 처리
            tail -n +3 "$FILE" | while IFS='|' read -r _ TITLE DATE _ _; do
              # 제목, 날짜 값이 올바르게 추출되었는지 확인
              [[ "$TITLE" == "Title" || "$TITLE" == "---" || -z "$TITLE" ]] && continue

              # 링크 파싱: Title에서 링크 텍스트와 GitHub 링크 추출
              LINK_TEXT=$(echo "$TITLE" | grep -oP '\[[^]]+\]' | tr -d '[]')
              GITHUB_LINK=$(echo "$TITLE" | grep -oP '\(([^)]+)\)' | tr -d '()')

              # 날짜 포맷: YYYY-MM-DD에서 Y와 M을 추출
              SLUG=$(basename "$GITHUB_LINK" .md)
              Y=$(echo "$DATE" | cut -d'-' -f1)
              M=$(echo "$DATE" | cut -d'-' -f2)

              # Nextra 링크 생성
              NEXTRA_LINK="/til/til-$Y/til-$M/$SLUG"

              # index.mdx 파일은 요약을 제외하고 출력
              if [[ "$SAFE_TAG" == "index" ]]; then
                echo "| $LINK_TEXT | [Nextra]($NEXTRA_LINK) \| [GitHub]($GITHUB_LINK) |" >> "$MDX_FILE"
              else
                echo "| $LINK_TEXT | [Nextra]($NEXTRA_LINK) \| [GitHub]($GITHUB_LINK) |" >> "$MDX_FILE"
              fi
            done
          done
          shopt -u nullglob

      - name: Create tags/_meta.json and index.mdx
        run: |
          TAGS_DIR="portfolio-repo/pages/til/tags"
          mkdir -p "$TAGS_DIR"

          # tags/_meta.json
          TAG_META_ITEMS=()
          for FILE in "$TAGS_DIR"/*.mdx; do
            [ -f "$FILE" ] || continue
            NAME=$(basename "$FILE" .mdx)
            [ "$NAME" = "index" ] && continue
            TAG_META_ITEMS+=("\"$NAME\": \"$NAME 태그\"")
          done

          # Ensure valid JSON format by handling commas properly
          {
            echo "{"
            echo '  "index": "문서개요"'
            for ITEM in "${TAG_META_ITEMS[@]}"; do
              echo "  ,$ITEM"
            done
            echo "}"
          } > "$TAGS_DIR/_meta.json"

          echo 'import LabelIcons from "../../../src/components/LabelIcons";' > "$TAGS_DIR/index.mdx"
          echo "" >> "$TAGS_DIR/index.mdx"
          echo "# 🏷️ 태그 모음" >> "$TAGS_DIR/index.mdx"
          echo "<LabelIcons />" >> "$TAGS_DIR/index.mdx"
          echo "| 태그  | 바로가기 |" >> "$TAGS_DIR/index.mdx"
          echo "|------|----------|" >> "$TAGS_DIR/index.mdx"
          for FILE in "$TAGS_DIR"/*.mdx; do
            NAME=$(basename "$FILE" .mdx)
            [ "$NAME" = "index" ] && continue
            echo "| $NAME | [Nextra](/til/tags/$NAME) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$NAME.md) |" >> "$TAGS_DIR/index.mdx"
          done

      - name: Create summaries and generate summary pages
        run: |
          SRC_BASE="til-repo"
          DEST_BASE="portfolio-repo/pages/til/summaries"

          # Process TIL files to generate summary pages
          find "$SRC_BASE" -type f -name "*.md" ! -path "$SRC_BASE/tags/*" | grep -vE '^til-repo/README\.md$' | while read FILE; do
            REL_PATH="${FILE#$SRC_BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2)
            FNAME=$(basename "$REL_PATH" .md)

            # Debugging: Check if year and month are being parsed correctly
            echo "Processing file: $FILE"

            [[ "$YEAR" =~ ^[0-9]{4}$ ]] || continue
            [[ "$MONTH" =~ ^[0-9]{2}$ ]] || continue

            # Get YAML metadata
            content=$(cat "$FILE")
            summary=$(echo "$content" | sed -n '/^summary:/p' | sed 's/summary: //')

            # Debugging: Check if summary is being extracted correctly
            echo "Summary: $summary"

            # Create a single summary file for the year (2025-summaries.mdx)
            SUMMARY_FILE="$DEST_BASE/$YEAR-summaries.mdx"
            mkdir -p "$(dirname "$SUMMARY_FILE")"

            # Include LabelIcons import at the beginning of the file if not already added
            echo 'import LabelIcons from "../../../src/components/LabelIcons";' >> "$SUMMARY_FILE"
            echo "" >> "$SUMMARY_FILE"
            echo "<LabelIcons />" >> "$SUMMARY_FILE"

            # Append a new month table if it doesn't exist already
            if ! grep -q "## $MONTH월" "$SUMMARY_FILE"; then
              echo "" >> "$SUMMARY_FILE"
              echo "## $MONTH월" >> "$SUMMARY_FILE"
              echo "" >> "$SUMMARY_FILE"
              echo "| 요약 | 바로가기 |" >> "$SUMMARY_FILE"
              echo "|---------|------|" >> "$SUMMARY_FILE"
            fi

            # Prepare the filenames array
            FILES=($(find "$SRC_BASE/$YEAR/$MONTH" -type f -name "*.md" | sort -u))

            # Loop through each file and append to the table
            for FILE in "${FILES[@]}"; do
              DAY=$(echo "$FILE" | cut -d'-' -f1)
              TITLE_CLEAN=$(echo "$FILE" | cut -d'-' -f2- | sed 's/-/ /g')
              echo "| $TITLE_CLEAN | [Nextra](/til/til-$YEAR/til-$MONTH/$FNAME) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/$REL_PATH) |" >> "$SUMMARY_FILE"
            done

            echo "Written summary for file $FILE"
          done

      - name: Create all _meta.json and index.mdx files
        run: |
          BASE="portfolio-repo/pages/til"
          YEARS=()
          for YEAR_DIR in "$BASE"/til-*; do
            [ -d "$YEAR_DIR" ] || continue
            YEARS+=("$(basename "$YEAR_DIR" | cut -d'-' -f2)")
          done
          {
            echo "{"
            echo '  "index": "문서개요"'
            echo '  ,"tags": "태그모음"'
            for YEAR in "${YEARS[@]}"; do
              echo '  ,"til-'"$YEAR"'": "'"$YEAR"'년 TIL"'
            done
            echo "}"
          } > "$BASE/_meta.json"

          echo "# 📓 Today I Learned (TIL)" > "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "> 꾸준한 기록은 최고의 성장으로 이어진다." >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "[🏷️ 태그모음](/til/tags)" >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "## 📅 연도별" >> "$BASE/index.mdx"
          for YEAR in "${YEARS[@]}"; do
            echo "- [${YEAR}년 TIL](/til/til-$YEAR)" >> "$BASE/index.mdx"
          done

          for YEAR in "${YEARS[@]}"; do
            YEAR_DIR="$BASE/til-$YEAR"
            MONTHS=()
            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTHS+=("til-$(basename "$MONTH_DIR" | cut -d'-' -f2)")
            done
            {
              echo "{"
              echo '  "index": "문서개요"'
              for MONTH in "${MONTHS[@]}"; do
                M=$(echo "$MONTH" | cut -d'-' -f2)
                echo '  ,"'"$MONTH"'": "'"$M"'월 TIL"'
              done
              echo "}"
            } > "$YEAR_DIR/_meta.json"

            echo 'import LabelIcons from "../../../src/components/LabelIcons";' > "$YEAR_DIR/index.mdx"
            echo "" >> "$YEAR_DIR/index.mdx"
            echo "# 문서개요" >> "$YEAR_DIR/index.mdx"
            echo "${YEAR}년 TIL 기록입니다." >> "$YEAR_DIR/index.mdx"
            echo "<LabelIcons />" >> "$YEAR_DIR/index.mdx"
            echo "" >> "$YEAR_DIR/index.mdx"
            echo "| 월 | 바로가기 |" >> "$YEAR_DIR/index.mdx"
            echo "|----|----------|" >> "$YEAR_DIR/index.mdx"
            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTH=$(basename "$MONTH_DIR" | cut -d'-' -f2)
              echo "| ${MONTH}월 | [Nextra](/til/til-$YEAR/til-$MONTH) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH) |" >> "$YEAR_DIR/index.mdx"
            done

            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTH_META_ITEMS=()
              FILES=()
              for FILE in "$MONTH_DIR"/*.mdx; do
                [ -f "$FILE" ] || continue
                FNAME=$(basename "$FILE" .mdx)
                [ "$FNAME" = "index" ] && continue
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE_CLEAN=$(echo "$FNAME" | cut -d'-' -f2- | sed 's/-/ /g')
                MONTH_META_ITEMS+=("\"$FNAME\": \"${DAY}-${TITLE_CLEAN}\"")
                FILES+=("$FNAME")
              done
              {
                echo "{"
                echo '  "index": "문서개요"'
                for ITEM in "${MONTH_META_ITEMS[@]}"; do
                  echo "  ,$ITEM"
                done
                echo "}"
              } > "$MONTH_DIR/_meta.json"

              MONTH_NUM=$(basename "$MONTH_DIR" | cut -d'-' -f2)
              echo 'import LabelIcons from "../../../../src/components/LabelIcons";' > "$MONTH_DIR/index.mdx"
              echo "" >> "$MONTH_DIR/index.mdx"
              echo "# 문서개요" >> "$MONTH_DIR/index.mdx"
              echo "${YEAR}년 ${MONTH_NUM}월 TIL 기록입니다." >> "$MONTH_DIR/index.mdx"
              echo "<LabelIcons />" >> "$MONTH_DIR/index.mdx"
              echo "" >> "$MONTH_DIR/index.mdx"
              echo "| 제목 | 바로가기 |" >> "$MONTH_DIR/index.mdx"
              echo "|------|----------|" >> "$MONTH_DIR/index.mdx"
              for FNAME in "${FILES[@]}"; do
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE_CLEAN=$(echo "$FNAME" | cut -d'-' -f2- | sed 's/-/ /g')
                echo "| ${DAY}-${TITLE_CLEAN} | [Nextra](/til/til-$YEAR/til-$MONTH_NUM/$FNAME) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH_NUM/$FNAME.md) |" >> "$MONTH_DIR/index.mdx"
              done
            done
          done

      - name: Create tags tables (Nextra/GitHub/Summary)
        run: |
          set -e
          BASE="portfolio-repo/pages/til"
          TAGS_DIR="$BASE/tags"
          mkdir -p "$TAGS_DIR"

          to_safe_tag() {
            echo "$1" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '_' | tr -s '_' | sed 's/^_//;s/_$//'
          }

          files=$(find "$BASE"/til-*/*/*.mdx -type f)
          if [ -z "$files" ]; then
            echo "No mdx files found for tags. Skipping tag table generation."
            exit 0
          fi

          for FILE in $files; do
            yaml=$(awk '/^---/ {i++} i==1; i==2 {exit}' "$FILE" | sed '1d;$d')
            tag_line=$(echo "$yaml" | grep "^tags:") || true
            [ -z "$tag_line" ] && continue
            tags=$(echo "$tag_line" | sed 's/tags:[ ]*\[\(.*\)\]/\1/' | tr -d '"'\'' ')
            IFS=',' read -ra tagarr <<< "$tags"

            summary=$(echo "$yaml" | grep "^summary:" | sed 's/summary:[ ]*//') || true
            [ -z "$summary" ] && summary="No summary available"

            REL_PATH="${FILE#$BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1 | cut -d'-' -f2)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2 | cut -d'-' -f2)
            FNAME=$(basename "$REL_PATH" .mdx)
            NEXTRA_LINK="/til/til-$YEAR/til-$MONTH/$FNAME"
            GITHUB_LINK="https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH/$FNAME.md"

            for tag in "${tagarr[@]}"; do
              safe_tag=$(to_safe_tag "$tag")
              [ -z "$safe_tag" ] && continue
              echo "$FNAME|$YEAR|$MONTH|$NEXTRA_LINK|$GITHUB_LINK|$summary" >> "$TAGS_DIR/$safe_tag.list"
            done
          done

          shopt -s nullglob
          for LIST in "$TAGS_DIR"/*.list; do
            safe_tag=$(basename "$LIST" .list)
            mdx="$TAGS_DIR/$safe_tag.mdx"
            safe_tag_path="../../../src/components/LabelIcons"
            
            echo "import LabelIcons from \"$safe_tag_path\";" > "$mdx"
            echo "" >> "$mdx"
            echo "# 🏷️ $safe_tag TIL 모음" >> "$mdx"
            echo "" >> "$mdx"
            echo "<LabelIcons />" >> "$mdx"
            echo "" >> "$mdx"
            
            # 요약을 제외하고 '제목'과 '바로가기'만 출력
            echo "| 제목 | 바로가기 |" >> "$mdx"
            echo "|------|----------|" >> "$mdx"
            
            sort "$LIST" | uniq | while IFS="|" read FNAME YEAR MONTH NEXTRA_LINK GITHUB_LINK _; do
                TITLE=$(echo "${FNAME//-/ }" | sed 's/^[0-9]* //')  # 숫자 제거
                echo "| $TITLE | [Nextra]($NEXTRA_LINK) \| [GitHub]($GITHUB_LINK) |" >> "$mdx"
            done
            rm "$LIST"
          done
          shopt -u nullglob

      - name: Commit and Push
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"
          git add .
          if git diff --cached --quiet; then
            echo "✅ No changes to commit"
            exit 0
          fi
          git commit -m "📝 Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git push
