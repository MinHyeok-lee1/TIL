name: 🔄 Sync TIL to Portfolio

on:
  push:
    branches: [main]
    paths: ["**/*.md", "**/*.mdx"]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      hasYears: ${{ steps.set-years.outputs.hasYears }}
      years: ${{ steps.set-years.outputs.years }}
      hasDeletions: ${{ steps.detect-deletion.outputs.hasDeletions }}

    steps:
      - name: Checkout TIL repository
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Find TIL years (for matrix)
        id: set-years
        run: |
          set -e
          echo "🔍 Working directory: $PWD"
          echo "📂 Contents of til-repo:"
          ls -R til-repo

          YEARS=$(find til-repo -mindepth 2 -maxdepth 2 -type f -name '*.md' | cut -d'/' -f2 | sort -u)
          echo "📅 Found years: $YEARS"

          if [ -z "$YEARS" ]; then
            echo "hasYears=false" >> "$GITHUB_OUTPUT"
            echo "years=[]" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          JSON=$(echo "$YEARS" | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "hasYears=true" >> "$GITHUB_OUTPUT"
          echo "years=$JSON" >> "$GITHUB_OUTPUT"

      - name: Detect deleted files
        id: detect-deletion
        run: |
          set -e
          cd til-repo
          git remote remove origin || true
          git remote add origin https://github.com/MinHyeok-lee1/TIL.git
          git fetch origin main || true

          DELETED=$(git diff --name-only --diff-filter=D origin/main...HEAD | grep -E '\\.md$' || true)

          if [ -n "$DELETED" ]; then
            echo "hasDeletions=true" >> "$GITHUB_OUTPUT"
          else
            echo "hasDeletions=false" >> "$GITHUB_OUTPUT"
          fi

  build-years:
    needs: setup
    if: ${{ needs.setup.outputs.hasYears == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        year: ${{ fromJson(needs.setup.outputs.years) }}

    steps:
      - name: Checkout TIL repo
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Sync and convert ${{ matrix.year }}
        run: |
          set -e
          YEAR=${{ matrix.year }}

          for MONTH_PATH in til-repo/$YEAR/*; do
              [ -d "$MONTH_PATH" ] || continue
              MONTH=$(basename "$MONTH_PATH")

              echo "🗂️ Syncing $YEAR/$MONTH"
              DEST_DIR="portfolio-repo/src/pages/til/til-$YEAR/til-$MONTH"
              mkdir -p "$DEST_DIR"

              echo "📂 MONTH_PATH: $MONTH_PATH"
              ls -al "$MONTH_PATH" || echo "❌ Failed to list $MONTH_PATH"

              find "til-repo/$YEAR" -type f -name "*.md" | while read FILE; do
              REL_PATH="${FILE#til-repo/}"
              DEST_PATH="portfolio-repo/src/pages/til/til-${REL_PATH%.*}.mdx"
              mkdir -p "$(dirname "$DEST_PATH")"
              cp "$FILE" "$DEST_PATH"
            done
          done

          echo "🔁 Converting .md → .mdx"
          find portfolio-repo/src/pages/til/til-$YEAR -type f -name "*.md" -exec bash -c 'mv "$0" "${0%.md}.mdx"' {} \;

  finalize:
    needs: [build-years]
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Clean old _meta.json and index.mdx files
        run: |
          find portfolio-repo/src/pages/til -name '_meta.json' -delete
          find portfolio-repo/src/pages/til -name 'index.mdx' -delete
      - name: Create index.mdx and _meta.json
        run: |
          BASE="portfolio-repo/src/pages/til"
          mkdir -p "$BASE"
          echo '{' > "$BASE/_meta.json"
          echo '  "index": "문서개요",' >> "$BASE/_meta.json"
          echo '  "til-tags": "태그모음"' >> "$BASE/_meta.json"

          cat <<EOF > "$BASE/index.mdx"
          # 📓 Today I Learned (TIL)

          > 꾸준한 기록은 최고의 성장으로 이어진다.

          - [🏷️ 태그모음](/til/til-tags)

          ## 📅 연도별

          EOF

          for YEAR_PATH in "$BASE"/til-[0-9][0-9][0-9][0-9]; do
            YEAR=$(basename "$YEAR_PATH" | cut -d'-' -f2)
            echo "- [$YEAR년 TIL](/til/til-$YEAR)" >> "$BASE/index.mdx"
            echo '  ,"til-'$YEAR'": "'$YEAR'년 TIL"' >> "$BASE/_meta.json"

            echo "# 문서개요" > "$YEAR_PATH/index.mdx"
            echo "" >> "$YEAR_PATH/index.mdx"
            echo "$YEAR년 TIL 기록입니다." >> "$YEAR_PATH/index.mdx"
            echo "" >> "$YEAR_PATH/index.mdx"
            echo "| 월 | Nextra 바로가기 | GitHub 바로가기 |" >> "$YEAR_PATH/index.mdx"
            echo "|----|------------------|------------------|" >> "$YEAR_PATH/index.mdx"

            echo '{' > "$YEAR_PATH/_meta.json"
            echo '  "index": "문서개요"' >> "$YEAR_PATH/_meta.json"

            for MONTH_PATH in "$YEAR_PATH"/til-*; do
              MONTH=$(basename "$MONTH_PATH" | cut -d'-' -f2)
              echo "| ${MONTH}월 | [Nextra 바로가기](/til/til-$YEAR/til-$MONTH) | [GitHub 바로가기](https://github.com/MinHyeok-lee1/TIL/tree/main/$YEAR/$MONTH) |" >> "$YEAR_PATH/index.mdx"
              echo '  ,"til-'$MONTH'": "'$MONTH'월 TIL"' >> "$YEAR_PATH/_meta.json"

              echo "# 문서개요" > "$MONTH_PATH/index.mdx"
              echo "" >> "$MONTH_PATH/index.mdx"
              echo "${MONTH}월의 TIL 기록입니다." >> "$MONTH_PATH/index.mdx"
              echo "" >> "$MONTH_PATH/index.mdx"
              echo "| 제목 | Nextra 바로가기 | GitHub 바로가기 |" >> "$MONTH_PATH/index.mdx"
              echo "|-------|------------------|------------------|" >> "$MONTH_PATH/index.mdx"

              echo '{' > "$MONTH_PATH/_meta.json"
              echo '  "index": "문서개요"' >> "$MONTH_PATH/_meta.json"

              for FILE in "$MONTH_PATH"/*.mdx; do
                FNAME=$(basename "$FILE" .mdx)
                [ "$FNAME" = "index" ] && continue
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE=$(echo "${FNAME:3}" | sed 's/-/ /g')
                echo "| ${DAY}일 $TITLE | [Nextra 바로가기](/til/til-$YEAR/til-$MONTH/$FNAME) | [GitHub 바로가기](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH/$FNAME.md) |" >> "$MONTH_PATH/index.mdx"
                echo '  ,"'$FNAME'": "'${DAY}일 $TITLE'"' >> "$MONTH_PATH/_meta.json"
              done

              echo "}" >> "$MONTH_PATH/_meta.json"
            done

            echo "}" >> "$YEAR_PATH/_meta.json"
          done

          echo "}" >> "$BASE/_meta.json"

      - name: Convert tags and generate tag index
        run: |
          TAGS_DIR="portfolio-repo/src/pages/til/til-tags"
          mkdir -p "$TAGS_DIR"

          echo '# 문서개요

          TIL 태그모음입니다.

          | 태그 | Nextra 바로가기 | GitHub 바로가기 |
          |------|------------------|------------------|' > "$TAGS_DIR/index.mdx"

          echo '{ "index": "문서개요" }' > "$TAGS_DIR/_meta.json"

          TAG_LIST=()

          for FILE in portfolio-repo/src/pages/til/til-*/til-*/*.mdx; do
            TAGS=$(grep '^tags:' "$FILE" | sed -E 's/^tags:\s*\[|\]//g' | tr ',' '\n' | tr -d '"' | tr -d ' ')
            for TAG in $TAGS; do
              TAG_LIST+=("$TAG")
            done
          done

          UNIQUE_TAGS=$(printf "%s\n" "${TAG_LIST[@]}" | sort -u)

          for TAG in $UNIQUE_TAGS; do
            TAG_FILE="$TAGS_DIR/$TAG.mdx"
            echo "# 🏷️ $TAG TIL 모음" > "$TAG_FILE"
            echo "" >> "$TAG_FILE"
            echo "| 제목 | Nextra 바로가기 | GitHub 바로가기 |" >> "$TAG_FILE"
            echo "|-------|------------------|------------------|" >> "$TAG_FILE"

            for FILE in portfolio-repo/src/pages/til/til-*/til-*/*.mdx; do
              if grep -q "tags:.*\b$TAG\b" "$FILE"; then
                FNAME=$(basename "$FILE" .mdx)
                YM=$(echo "$FILE" | grep -o 'til-[0-9]*/til-[0-9]*')
                TITLE=$(echo "${FNAME:3}" | sed 's/-/ /g')
                echo "| $TITLE | [Nextra 바로가기](/til/$YM/$FNAME) | [GitHub 바로가기](https://github.com/MinHyeok-lee1/TIL/blob/main/${YM/til-/}/$FNAME.md) |" >> "$TAG_FILE"
              fi
            done

            echo "| $TAG | [Nextra 바로가기](/til/til-tags/$TAG) | [GitHub 바로가기](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$TAG.md) |" >> "$TAGS_DIR/index.mdx"
          done

      - name: Commit and Push
        id: pushcheck
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"

          git add .
          git diff --cached --exit-code && echo "✅ No content changes." && echo "should_force=false" >> "$GITHUB_OUTPUT" && exit 0

          git commit -m "📝 Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git push
          echo "should_force=${{ needs.setup.outputs.hasDeletions }}" >> "$GITHUB_OUTPUT"

      # - name: Deploy to Vercel
      #   if: always()
      #   run: |
      #     set -e
      #     npm install -g vercel
      #     FORCE_FLAG=""
      #     if [ "${{ steps.pushcheck.outputs.should_force }}" == "true" ]; then
      #       FORCE_FLAG="--force"
      #     fi
      #     vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes $FORCE_FLAG --debug
      #   working-directory: portfolio-repo
