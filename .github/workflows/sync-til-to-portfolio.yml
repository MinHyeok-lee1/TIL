name: üîÑ Sync TIL to Portfolio

on:
  workflow_run:
    workflows: ["üè∑Ô∏è Generate Tag Pages from TIL"]
    types:
      - completed
  workflow_dispatch:

jobs:
  sync-til:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TIL repo
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repo
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Cleanup old TIL pages
        run: |
          rm -rf portfolio-repo/pages/til

      - name: Sync and convert TIL files
        run: |
          set -e
          SRC_BASE="til-repo"
          DEST_BASE="portfolio-repo/pages/til"

          mkdir -p "$DEST_BASE"

          # TIL Î≥∏Î¨∏ md ‚Üí mdxÎ°ú Î≥ÄÌôò/Î≥µÏÇ¨
          find "$SRC_BASE" -type f -name "*.md" ! -path "$SRC_BASE/tags/*" | grep -vE '^til-repo/README\.md$' | while read FILE; do
            REL_PATH="${FILE#$SRC_BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2)
            FNAME=$(basename "$REL_PATH" .md)

            [[ "$YEAR" =~ ^[0-9]{4}$ ]] || continue
            [[ "$MONTH" =~ ^[0-9]{2}$ ]] || continue

            mkdir -p "$DEST_BASE/til-$YEAR"
            DEST_DIR="$DEST_BASE/til-$YEAR/til-$MONTH"
            mkdir -p "$DEST_DIR"
            cp "$FILE" "$DEST_DIR/$FNAME.mdx"
          done

          TAGS_SRC="$SRC_BASE/tags"
          TAGS_DEST="$DEST_BASE/tags"
          mkdir -p "$TAGS_DEST"
          shopt -s nullglob
          for FILE in "$TAGS_SRC"/*.md; do
            TAG_NAME=$(basename "$FILE" .md)
            MDX_FILE="$TAGS_DEST/$TAG_NAME.mdx"

            # Ìó§Îçî ÏÉùÏÑ±
            echo "# üè∑Ô∏è $TAG_NAME TIL Î™®Ïùå" > "$MDX_FILE"
            echo "" >> "$MDX_FILE"
            echo "| Ï†úÎ™© | ÏöîÏïΩ | Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$MDX_FILE"
            echo "|------|------|----------|" >> "$MDX_FILE"

            awk '
              BEGIN {skip=0}
              /^ *\|/ {              # ÌÖåÏù¥Î∏î ÌñâÎßå Ï≤òÎ¶¨
                if (skip++ < 2) next # Ìó§Îçî, Íµ¨Î∂ÑÏÑ† 2Ï§ÑÏùÄ Ïä§ÌÇµ
                n=split($0,arr,"|")
                if(n<5) next         # Ïó¥ Í∞úÏàò Î∂ÄÏ°± Ïãú Ìå®Ïä§
                gsub(/^[ \t]+|[ \t]+$/, "", arr[2]) # TITLE ÏñëÎÅù Í≥µÎ∞± Ï†úÍ±∞
                gsub(/^[ \t]+|[ \t]+$/, "", arr[3]) # DATE
                gsub(/^[ \t]+|[ \t]+$/, "", arr[4]) # SUMMARY

                # TITLEÏóêÏÑú ÎßÅÌÅ¨ Ï∂îÏ∂ú
                match(arr[2], /\[([^\]]+)\]\(([^\)]+)\)/, m)
                linktext=(length(m[1]) ? m[1] : arr[2])
                glink=(length(m[2]) ? m[2] : "")

                # SLUG, ÎÇ†Ïßú Ï≤òÎ¶¨
                split(arr[3], datepart, "-")
                y=(length(datepart[1]) ? datepart[1] : "")
                m=(length(datepart[2]) ? datepart[2] : "")
                slug=(glink ~ /\.md$/ ? gensub(/.*\/([^\/]+)\.md$/,"\\1","g",glink) : "")

                nextralink= (y && m && slug) ? ("/til/til-" y "/til-" m "/" slug) : ""
                summary=arr[4]

                if(linktext && nextralink && glink)
                  printf("| %s | %s | [Nextra](%s) \\| [GitHub](%s) |\n", linktext, summary, nextralink, glink)
              }
            ' "$FILE" >> "$MDX_FILE"
          done
          shopt -u nullglob

      - name: Create tags/_meta.json and index.mdx
        run: |
          TAGS_DIR="portfolio-repo/pages/til/tags"
          mkdir -p "$TAGS_DIR"

          # tags/_meta.json
          TAG_META_ITEMS=()
          for FILE in "$TAGS_DIR"/*.mdx; do
            [ -f "$FILE" ] || continue
            NAME=$(basename "$FILE" .mdx)
            [ "$NAME" = "index" ] && continue
            TAG_META_ITEMS+=("\"$NAME\": \"$NAME ÌÉúÍ∑∏\"")
          done
          {
            echo "{"
            echo '  "index": "Î¨∏ÏÑúÍ∞úÏöî"'
            for ITEM in "${TAG_META_ITEMS[@]}"; do
              echo "  ,$ITEM"
            done
            echo "}"
          } > "$TAGS_DIR/_meta.json"

          echo 'import LabelIcons from "../../../src/components/LabelIcons";' > "$TAGS_DIR/index.mdx"
          echo "" >> "$TAGS_DIR/index.mdx"
          echo "# üè∑Ô∏è ÌÉúÍ∑∏ Î™®Ïùå" >> "$TAGS_DIR/index.mdx"
          echo "<LabelIcons />" >> "$TAGS_DIR/index.mdx"
          echo "| ÌÉúÍ∑∏ | Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$TAGS_DIR/index.mdx"
          echo "|------|----------|" >> "$TAGS_DIR/index.mdx"
          for FILE in "$TAGS_DIR"/*.mdx; do
            NAME=$(basename "$FILE" .mdx)
            [ "$NAME" = "index" ] && continue
            echo "| $NAME | [Nextra](/til/tags/$NAME) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$NAME.md) |" >> "$TAGS_DIR/index.mdx"
          done

      - name: Create all _meta.json and index.mdx files
        run: |
          BASE="portfolio-repo/pages/til"
          YEARS=()
          for YEAR_DIR in "$BASE"/til-*; do
            [ -d "$YEAR_DIR" ] || continue
            YEARS+=("$(basename "$YEAR_DIR" | cut -d'-' -f2)")
          done
          {
            echo "{"
            echo '  "index": "Î¨∏ÏÑúÍ∞úÏöî"'
            echo '  ,"tags": "ÌÉúÍ∑∏Î™®Ïùå"'
            for YEAR in "${YEARS[@]}"; do
              echo '  ,"til-'"$YEAR"'": "'"$YEAR"'ÎÖÑ TIL"'
            done
            echo "}"
          } > "$BASE/_meta.json"

          echo "# üìì Today I Learned (TIL)" > "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "> Íæ∏Ï§ÄÌïú Í∏∞Î°ùÏùÄ ÏµúÍ≥†Ïùò ÏÑ±Ïû•ÏúºÎ°ú Ïù¥Ïñ¥ÏßÑÎã§." >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "[üè∑Ô∏è ÌÉúÍ∑∏Î™®Ïùå](/til/tags)" >> "$BASE/index.mdx"
          echo "" >> "$BASE/index.mdx"
          echo "## üìÖ Ïó∞ÎèÑÎ≥Ñ" >> "$BASE/index.mdx"
          for YEAR in "${YEARS[@]}"; do
            echo "- [${YEAR}ÎÖÑ TIL](/til/til-$YEAR)" >> "$BASE/index.mdx"
          done

          for YEAR in "${YEARS[@]}"; do
            YEAR_DIR="$BASE/til-$YEAR"
            MONTHS=()
            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTHS+=("til-$(basename "$MONTH_DIR" | cut -d'-' -f2)")
            done
            {
              echo "{"
              echo '  "index": "Î¨∏ÏÑúÍ∞úÏöî"'
              for MONTH in "${MONTHS[@]}"; do
                M=$(echo "$MONTH" | cut -d'-' -f2)
                echo '  ,"'"$MONTH"'": "'"$M"'Ïõî TIL"'
              done
              echo "}"
            } > "$YEAR_DIR/_meta.json"

            echo 'import LabelIcons from "../../../src/components/LabelIcons";' > "$YEAR_DIR/index.mdx"
            echo "" >> "$YEAR_DIR/index.mdx"
            echo "# Î¨∏ÏÑúÍ∞úÏöî" >> "$YEAR_DIR/index.mdx"
            echo "${YEAR}ÎÖÑ TIL Í∏∞Î°ùÏûÖÎãàÎã§." >> "$YEAR_DIR/index.mdx"
            echo "<LabelIcons />" >> "$YEAR_DIR/index.mdx"
            echo "" >> "$YEAR_DIR/index.mdx"
            echo "| Ïõî | Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$YEAR_DIR/index.mdx"
            echo "|----|----------|" >> "$YEAR_DIR/index.mdx"
            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTH=$(basename "$MONTH_DIR" | cut -d'-' -f2)
              echo "| ${MONTH}Ïõî | [Nextra](/til/til-$YEAR/til-$MONTH) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH) |" >> "$YEAR_DIR/index.mdx"
            done

            for MONTH_DIR in "$YEAR_DIR"/til-*; do
              [ -d "$MONTH_DIR" ] || continue
              MONTH_META_ITEMS=()
              FILES=()
              for FILE in "$MONTH_DIR"/*.mdx; do
                [ -f "$FILE" ] || continue
                FNAME=$(basename "$FILE" .mdx)
                [ "$FNAME" = "index" ] && continue
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE_CLEAN=$(echo "$FNAME" | cut -d'-' -f2- | sed 's/-/ /g')
                MONTH_META_ITEMS+=("\"$FNAME\": \"${DAY}Ïùº ${TITLE_CLEAN}\"")
                FILES+=("$FNAME")
              done
              {
                echo "{"
                echo '  "index": "Î¨∏ÏÑúÍ∞úÏöî"'
                for ITEM in "${MONTH_META_ITEMS[@]}"; do
                  echo "  ,$ITEM"
                done
                echo "}"
              } > "$MONTH_DIR/_meta.json"

              MONTH_NUM=$(basename "$MONTH_DIR" | cut -d'-' -f2)
              echo 'import LabelIcons from "../../../../src/components/LabelIcons";' > "$MONTH_DIR/index.mdx"
              echo "" >> "$MONTH_DIR/index.mdx"
              echo "# Î¨∏ÏÑúÍ∞úÏöî" >> "$MONTH_DIR/index.mdx"
              echo "${YEAR}ÎÖÑ ${MONTH_NUM}Ïõî TIL Í∏∞Î°ùÏûÖÎãàÎã§." >> "$MONTH_DIR/index.mdx"
              echo "<LabelIcons />" >> "$MONTH_DIR/index.mdx"
              echo "" >> "$MONTH_DIR/index.mdx"
              echo "| Ï†úÎ™© | Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$MONTH_DIR/index.mdx"
              echo "|------|----------|" >> "$MONTH_DIR/index.mdx"
              for FNAME in "${FILES[@]}"; do
                DAY=$(echo "$FNAME" | cut -d'-' -f1)
                TITLE_CLEAN=$(echo "$FNAME" | cut -d'-' -f2- | sed 's/-/ /g')
                echo "| ${DAY}Ïùº ${TITLE_CLEAN} | [Nextra](/til/til-$YEAR/til-$MONTH_NUM/$FNAME) \| [GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH_NUM/$FNAME.md) |" >> "$MONTH_DIR/index.mdx"
              done
            done
          done

      - name: Create tag tables (Nextra/GitHub/Summary)
        run: |
          set -e
          BASE="portfolio-repo/pages/til"
          TAGS_DIR="$BASE/tags"
          mkdir -p "$TAGS_DIR"

          files=$(find "$BASE"/til-*/*/*.mdx -type f)
          if [ -z "$files" ]; then
            echo "No mdx files found for tags. Skipping tag table generation."
            exit 0
          fi

          echo "$files" | while read FILE; do
            yaml=$(awk '/^---/ {i++} i==1; i==2 {exit}' "$FILE" | sed '1d;$d')
            tag_line=$(echo "$yaml" | grep "^tags:") || true
            [ -z "$tag_line" ] && continue
            tags=$(echo "$tag_line" | sed 's/tags:[ ]*\[\(.*\)\]/\1/' | tr -d '"'\'' ')
            IFS=',' read -ra tagarr <<< "$tags"

            summary=$(echo "$yaml" | grep "^summary:" | sed 's/summary:[ ]*//') || true
            [ -z "$summary" ] && summary=""

            REL_PATH="${FILE#$BASE/}"
            YEAR=$(echo "$REL_PATH" | cut -d'/' -f1 | cut -d'-' -f2)
            MONTH=$(echo "$REL_PATH" | cut -d'/' -f2 | cut -d'-' -f2)
            FNAME=$(basename "$REL_PATH" .mdx)
            NEXTRA_LINK="/til/til-$YEAR/til-$MONTH/$FNAME"
            GITHUB_LINK="https://github.com/MinHyeok-lee1/TIL/blob/main/$YEAR/$MONTH/$FNAME.md"

            for tag in "${tagarr[@]}"; do
              safe_tag=$(echo "$tag" | tr -c '[:alnum:]_' '_')
              echo "$FNAME|$YEAR|$MONTH|$NEXTRA_LINK|$GITHUB_LINK|$summary" >> "$TAGS_DIR/$safe_tag.list"
            done
          done

          shopt -s nullglob
          for LIST in "$TAGS_DIR"/*.list; do
            safe_tag=$(basename "$LIST" .list)
            mdx="$TAGS_DIR/$safe_tag.mdx"
            safe_tag_path="../../../src/components/LabelIcons"
            echo "import LabelIcons from \"$safe_tag_path\";" > "$mdx"
            echo "" >> "$mdx"
            echo "# üè∑Ô∏è $safe_tag TIL Î™®Ïùå" >> "$mdx"
            echo "" >> "$mdx"
            echo "<LabelIcons />" >> "$mdx"
            echo "" >> "$mdx"
            echo "| Ï†úÎ™© | Î∞îÎ°úÍ∞ÄÍ∏∞ | ÏöîÏïΩ |" >> "$mdx"
            echo "|------|----------|------|" >> "$mdx"
            sort "$LIST" | uniq | while IFS="|" read FNAME YEAR MONTH NEXTRA_LINK GITHUB_LINK SUMMARY; do
              TITLE="${FNAME//-/ }"
              echo "| $TITLE | [Nextra]($NEXTRA_LINK) \| [GitHub]($GITHUB_LINK) | $SUMMARY |" >> "$mdx"
            done
            rm "$LIST"
          done
          shopt -u nullglob

      - name: Commit and Push
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"
          git add .
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit"
            exit 0
          fi
          git commit -m "üìù Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git push
