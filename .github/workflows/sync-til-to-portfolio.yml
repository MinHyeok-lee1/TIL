name: üîÑ Sync TIL to Portfolio

on:
  push:
    branches:
      - main
    paths:
      - "**/*.md"
  workflow_dispatch:

jobs:
  sync-to-portfolio:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout TIL repository (this repo)
        uses: actions/checkout@v3
        with:
          path: til-repo

      - name: Checkout Portfolio repository
        uses: actions/checkout@v3
        with:
          repository: MinHyeok-lee1/MinHyeok-lee1-portfolio
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: portfolio-repo

      - name: Copy TIL files including tags
        run: |
          mkdir -p portfolio-repo/src/pages/til/
          rsync -av --delete \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude 'README.md' \
            til-repo/ portfolio-repo/src/pages/til/

      - name: Convert .md to .mdx (excluding tags/)
        run: |
          find portfolio-repo/src/pages/til -type f -name "*.md" ! -path "*/tags/*" | while read file; do
            mv "$file" "${file%.md}.mdx"
          done

      - name: Generate _meta.json, index.mdx, and tag content
        run: |
          echo "üìÅ Generating _meta.json, index.mdx, and tag content..."

          TIL_DIR="portfolio-repo/src/pages/til"

          # üßπ Remove legacy folders
          rm -rf "$TIL_DIR/20*"

          # üè∑ Ìè¥Îçî ÌëúÏãú Ïù¥Î¶Ñ
          get_display_name() {
            case "$1" in
              index) echo "ÏÜåÍ∞ú";;
              2025) echo "2025ÎÖÑ TIL";;
              06) echo "06Ïõî TIL";;
              07) echo "07Ïõî TIL";;
              *) echo "$1";;
            esac
          }

          create_meta_and_index() {
            DIR=$1
            TITLE=$2
            INDEX_FILE="$DIR/index.mdx"
            META_FILE="$DIR/_meta.json"

            mkdir -p "$DIR"

            echo "# $TITLE" > "$INDEX_FILE"
            echo "" >> "$INDEX_FILE"
            echo "$TITLE ÌéòÏù¥ÏßÄÏûÖÎãàÎã§." >> "$INDEX_FILE"

            echo "{" > "$META_FILE"
            echo '  "index": "ÏÜåÍ∞ú",' >> "$META_FILE"

            for path in $(find "$DIR" -mindepth 1 -maxdepth 1 | sort); do
              name=$(basename "$path")
              base="${name%.mdx}"
              label=$(get_display_name "$base")
              echo "  \"$base\": \"$label\"," >> "$META_FILE"
            done

            sed -i '$ s/,$//' "$META_FILE" || sed -i '' '$ s/,$//' "$META_FILE"
            echo "}" >> "$META_FILE"
          }

          # til/index.mdx
          cat <<EOF > "$TIL_DIR/index.mdx"
          # Today I Learned (TIL)

          > Íæ∏Ï§ÄÌïú Í∏∞Î°ùÏùÄ ÏµúÍ≥†Ïùò ÏÑ±Ïû•ÏúºÎ°ú Ïù¥Ïñ¥ÏßÑÎã§.  
          Í∞úÎ∞ú/ÏûÑÎ≤†ÎîîÎìú/ÎèÑÍµ¨Ïóê ÎåÄÌïú ÌïôÏäµ Í∏∞Î°ùÏùÑ Ï†ïÎ¶¨Ìï©ÎãàÎã§.

          ## üìÖ Ïó∞ÎèÑÎ≥Ñ

          - [üè∑Ô∏è ÌÉúÍ∑∏ Î™®Ïùå](/til/tags)
          - [2025ÎÖÑ TIL](/til/til-2025)
          EOF

                    echo '{
            "index": "ÏÜåÍ∞ú",
            "til-2025": "2025ÎÖÑ TIL",
            "tags": "ÌÉúÍ∑∏ Î™®Ïùå"
          }' > "$TIL_DIR/_meta.json"

          # ÎÖÑ/Ïõî/Ïùº Ï≤òÎ¶¨
          for year_path in til-repo/[0-9][0-9][0-9][0-9]; do
            year=$(basename "$year_path")
            ydir="$TIL_DIR/til-$year"
            mkdir -p "$ydir"
            create_meta_and_index "$ydir" "üìÖ ${year}ÎÖÑ TIL"

            for month_path in "$year_path"/*; do
              [ -d "$month_path" ] || continue
              month=$(basename "$month_path")
              mdir="$ydir/til-$month"
              mkdir -p "$mdir"

              echo "{" > "$mdir/_meta.json"
              echo '  "index": "ÏÜåÍ∞ú",' >> "$mdir/_meta.json"

              for file in "$month_path"/*.md; do
                base=$(basename "$file" .md)
                title="$(grep -m1 '^title:' "$file" | sed 's/title: *//')"
                name="til-${base}"
                cp "$file" "$mdir/$name.mdx"
                echo "  \"$name\": \"${title:-$base}\"," >> "$mdir/_meta.json"
              done
              sed -i '$ s/,$//' "$mdir/_meta.json" || sed -i '' '$ s/,$//' "$mdir/_meta.json"
              echo "}" >> "$mdir/_meta.json"

              echo "# üóìÔ∏è ${year}ÎÖÑ ${month}Ïõî TIL" > "$mdir/index.mdx"
              echo "" >> "$mdir/index.mdx"
              echo "Ìï¥Îãπ ÏõîÏùò TIL Î™©Î°ùÏûÖÎãàÎã§." >> "$mdir/index.mdx"
            done
          done

          # tags/index Î∞è Í∞Å tag.md Î≥¥Í∞ï
          TAGS_DIR="$TIL_DIR/tags"
          TAGS_INDEX="$TAGS_DIR/index.mdx"
          TAGS_META="$TAGS_DIR/_meta.json"

          echo "{" > "$TAGS_META"
          echo '  "index": "ÏÜåÍ∞ú",' >> "$TAGS_META"

          echo "# üéüÔ∏è ÌÉúÍ∑∏ Î™©Î°ù" > "$TAGS_INDEX"
          echo "" >> "$TAGS_INDEX"
          echo "TILÏùò ÌÉúÍ∑∏Î≥Ñ Î∂ÑÎ•òÏûÖÎãàÎã§.\n" >> "$TAGS_INDEX"
          echo "| Nextra Ï†ïÎ¶¨ | GitHub Î∞îÎ°úÍ∞ÄÍ∏∞ |" >> "$TAGS_INDEX"
          echo "|-------------|----------------|" >> "$TAGS_INDEX"

          for tag_file in "$TAGS_DIR"/*.md; do
            tag=$(basename "$tag_file" .md)
            echo "  \"$tag\": \"$tag\"," >> "$TAGS_META"

            echo "# $tag ÌÉúÍ∑∏ Î¨∏ÏÑú" > "$tag_file"
            echo "\n## üìò Nextra Ï†ïÎ¶¨" >> "$tag_file"
            grep -rli "tags:.*$tag" "$TIL_DIR" | grep ".mdx$" | while read match; do
              rel_path="${match#*$TIL_DIR}"
              rel_path="/til${rel_path%.mdx}"
              title="$(grep -m1 '^title:' "$match" | sed 's/title: *//')"
              echo "- [$title]($rel_path)" >> "$tag_file"
            done

            echo "\n## üîó GitHub ÏõêÎ≥∏" >> "$tag_file"
            echo "- [GitHubÎ°ú Î≥¥Í∏∞](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$tag.md)" >> "$tag_file"

            echo "| [$tag](/til/tags/$tag.md) | [üîó GitHub](https://github.com/MinHyeok-lee1/TIL/blob/main/tags/$tag.md) |" >> "$TAGS_INDEX"
          done

          sed -i '$ s/,$//' "$TAGS_META" || sed -i '' '$ s/,$//' "$TAGS_META"
          echo "}" >> "$TAGS_META"

      - name: Commit and Push
        run: |
          cd portfolio-repo
          git config user.name "MinHyeok-lee1"
          git config user.email "minhyeok.lee1@gmail.com"

          git add .
          CHANGED_FILES=$(git diff --cached --name-only)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes"
            exit 0
          fi

          COMMIT_MSG="üìù Sync TIL to portfolio: $(date +'%Y-%m-%d')"
          git commit -m "$COMMIT_MSG"
          git push || { echo "‚ö†Ô∏è Git push failed"; exit 1; }
